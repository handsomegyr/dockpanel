郭永荣
handsomegyr@hotmail.com

每次看到一些工具类软件，比如像AutoCad，PhotoShop等的界面，
对他们的画面动作产生了兴趣。老是问自己，这个是怎么实现的。
由于自身所在的公司是做日本外包的，没有多少技术含量，
很难通过做项目来提高自己的编成水平。更加谈不上去理解设计模式了。

但是带着这个疑问，通过网上google，惊奇地发现有高手实现了。
我满怀希望的想通过一两个月研读该源代码来掌握它。
没有想到，现实是残酷的。
我在3-4年前就下载了weifenluo的DockPanel的代码，越看越是不懂。
有高手曾经讲过 单步调试是最好的理解代码的方式。
但是我发现单步到最后，我迷失了方向了。到后面我只能放弃了。
我不能怪高手，而只能怪自己的水平过低。

从此之后，我发奋图强，大学的课本从新研读，同时研读一些其他的技术书，
观看webcast的视频教程，持续到现在。
经过了3年多的时间的锻炼，我觉得我的理论和编程水平好像都提高了。
今年年初我再一次研究weifenluo的代码的时候，感觉到不像以前那么难懂了。
而且也有自己的看法了，所以下定决心进行改写，并且把它公开出来，
让大家一起帮我改进。

从今年年初到现在，也有4个月了，在加上前几年的陆续2-3个月研读代码，
前后半年，终于有了现在的成果。
每次打开这个工程，看到里面的一个个文件，洋洋自得之余，
也同时感觉和高手的编程水平的差距。

当我终于看懂高手代码的时候，高手已经在用其他的方式实现了同样的机能。

下段文字就是高手weifenluo先生的原话：
我写了一个基于WPF的Docking Library，在这些方面作了很好的改进（http://www.devzest.com/WpfDocking.aspx）。
这个Docking Library真正做到了逻辑和UI的分离，
比如说，DockPane类是从Object派生的，UI是DockPane的DataTemplate。
WPF里UI和逻辑之间是通过Data Binding来实现的，而Data Binding就是一种观察者模式。


下面是关于这个工程的说明
开发工具：VS2010
FRAMEWORK：dotnet2.0
目的：解决weifenluo先生的代码中对象调用过于紧密的问题
解决办法：通过观察者模式（事件模型）处理
好处：将DockWindow，DockPane，DockPaneStrip等等控件可以单独使用。可以重复利用了













